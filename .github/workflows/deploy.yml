name: Deploy to AWS EC2

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload JAR to S3
        run: |
          aws s3 cp build/libs/youtube-0.0.1-SNAPSHOT.jar "s3://${{ secrets.S3_BUCKET_NAME }}/youtube.jar"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Downloading JAR from S3..."
            aws s3 cp "s3://${{ secrets.S3_BUCKET_NAME }}/youtube.jar" /home/ubuntu/app/application.jar
            sudo chown ubuntu:ubuntu /home/ubuntu/app/application.jar
            
            echo "Starting service with environment variables..."
            sudo systemctl stop spring-app
            sudo SPRING_PROFILES_ACTIVE=aws \
            DB_HOST=${{ secrets.DB_HOST }} \
            DB_PORT=${{ secrets.DB_PORT }} \
            DB_NAME=${{ secrets.DB_NAME }} \
            DB_USERNAME=${{ secrets.DB_USERNAME }} \
            DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            AWS_REGION=${{ secrets.AWS_REGION }} \
            S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            systemctl start spring-app
            
            echo "Checking service status..."
            sleep 5
            sudo systemctl status spring-app
            sudo journalctl -u spring-app -n 50 --no-pager