name: Deploy to AWS EC2

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Make zip file
        run: zip -r ./deploy.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ${{ secrets.AWS_REGION }} ./deploy.zip s3://${{ secrets.S3_BUCKET_NAME }}/

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            cd /home/ubuntu/app
            sudo rm -rf ./deploy
            mkdir ./deploy
            cd ./deploy
            aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/deploy.zip .
            unzip ./deploy.zip
            sudo chmod +x ./gradlew
            sudo ./gradlew clean build -x test
            cd build/libs
            
            # Deploy script 생성
            cat > deploy.sh << 'EOF'
            #!/bin/bash
            CURRENT_PID=$(pgrep -f '.jar')
            if [ -n "$CURRENT_PID" ]; then
              kill -15 $CURRENT_PID
              sleep 5
            fi
            nohup java -jar -Dspring.profiles.active=aws -Xms512m -Xmx1024m *.jar > /home/ubuntu/app/application.log 2>&1 &
            echo $! > /home/ubuntu/app/application.pid
            EOF
            
            # script 실행 권한 부여 및 실행
            chmod +x deploy.sh
            ./deploy.sh
            
            # 실행 확인
            sleep 5
            if [ -f /home/ubuntu/app/application.pid ]; then
              NEW_PID=$(cat /home/ubuntu/app/application.pid)
              if ps -p $NEW_PID > /dev/null; then
                echo "Application is running with pid $NEW_PID"
                exit 0
              fi
            fi
            echo "Failed to start application"
            exit 1